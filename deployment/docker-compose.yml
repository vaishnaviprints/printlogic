version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/Dockerfile.frontend
    container_name: vaishnavi-frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - vaishnavi-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Service
  backend:
    build:
      context: ../backend
      dockerfile: ../deployment/Dockerfile.backend
    container_name: vaishnavi-backend
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=${MONGO_URL}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
    depends_on:
      - mongodb
    networks:
      - vaishnavi-network
    restart: always
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - backend-uploads:/app/uploads
      - backend-logs:/app/logs

  # MongoDB Service
  mongodb:
    image: mongo:6
    container_name: vaishnavi-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME}
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    networks:
      - vaishnavi-network
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (Optional - for performance)
  redis:
    image: redis:7-alpine
    container_name: vaishnavi-redis
    ports:
      - "6379:6379"
    networks:
      - vaishnavi-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  vaishnavi-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  backend-uploads:
    driver: local
  backend-logs:
    driver: local
